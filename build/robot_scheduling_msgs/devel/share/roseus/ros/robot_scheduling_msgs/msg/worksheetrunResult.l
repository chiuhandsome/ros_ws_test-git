;; Auto-generated. Do not edit!


(when (boundp 'robot_scheduling_msgs::worksheetrunResult)
  (if (not (find-package "ROBOT_SCHEDULING_MSGS"))
    (make-package "ROBOT_SCHEDULING_MSGS"))
  (shadow 'worksheetrunResult (find-package "ROBOT_SCHEDULING_MSGS")))
(unless (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT")
  (make-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))

(in-package "ROS")
;;//! \htmlinclude worksheetrunResult.msg.html


(intern "*OK*" (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(shadow '*OK* (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(defconstant robot_scheduling_msgs::worksheetrunResult::*OK* 1)
(intern "*NOT_OK*" (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(shadow '*NOT_OK* (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(defconstant robot_scheduling_msgs::worksheetrunResult::*NOT_OK* 2)
(intern "*TIMED_OUT*" (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(shadow '*TIMED_OUT* (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(defconstant robot_scheduling_msgs::worksheetrunResult::*TIMED_OUT* 3)
(intern "*OUT_OF_TIMES*" (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(shadow '*OUT_OF_TIMES* (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(defconstant robot_scheduling_msgs::worksheetrunResult::*OUT_OF_TIMES* 4)
(intern "*PASS*" (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(shadow '*PASS* (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(defconstant robot_scheduling_msgs::worksheetrunResult::*PASS* 5)
(intern "*NOT_FINISH*" (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(shadow '*NOT_FINISH* (find-package "ROBOT_SCHEDULING_MSGS::WORKSHEETRUNRESULT"))
(defconstant robot_scheduling_msgs::worksheetrunResult::*NOT_FINISH* 6)
(defclass robot_scheduling_msgs::worksheetrunResult
  :super ros::object
  :slots (_result ))

(defmethod robot_scheduling_msgs::worksheetrunResult
  (:init
   (&key
    ((:result __result) 0)
    )
   (send-super :init)
   (setq _result (round __result))
   self)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:serialization-length
   ()
   (+
    ;; uint8 _result
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _result
       (write-byte _result s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _result
     (setq _result (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;;
   self)
  )

(setf (get robot_scheduling_msgs::worksheetrunResult :md5sum-) "9ed7c09cdb26218a0ca806dec11de6ed")
(setf (get robot_scheduling_msgs::worksheetrunResult :datatype-) "robot_scheduling_msgs/worksheetrunResult")
(setf (get robot_scheduling_msgs::worksheetrunResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
uint8 OK=1
uint8 NOT_OK=2
uint8 TIMED_OUT=3
uint8 OUT_OF_TIMES=4
uint8 PASS=5
uint8 NOT_FINISH=6
uint8 result

")



(provide :robot_scheduling_msgs/worksheetrunResult "9ed7c09cdb26218a0ca806dec11de6ed")


