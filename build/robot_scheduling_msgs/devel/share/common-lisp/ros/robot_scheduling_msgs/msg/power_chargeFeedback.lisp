; Auto-generated. Do not edit!


(cl:in-package robot_scheduling_msgs-msg)


;//! \htmlinclude power_chargeFeedback.msg.html

(cl:defclass <power_chargeFeedback> (roslisp-msg-protocol:ros-message)
  ((charge_fb_state
    :reader charge_fb_state
    :initarg :charge_fb_state
    :type cl:fixnum
    :initform 0))
)

(cl:defclass power_chargeFeedback (<power_chargeFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <power_chargeFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'power_chargeFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name robot_scheduling_msgs-msg:<power_chargeFeedback> is deprecated: use robot_scheduling_msgs-msg:power_chargeFeedback instead.")))

(cl:ensure-generic-function 'charge_fb_state-val :lambda-list '(m))
(cl:defmethod charge_fb_state-val ((m <power_chargeFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader robot_scheduling_msgs-msg:charge_fb_state-val is deprecated.  Use robot_scheduling_msgs-msg:charge_fb_state instead.")
  (charge_fb_state m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<power_chargeFeedback>)))
    "Constants for message type '<power_chargeFeedback>"
  '((:CHARGE_NONE . 0)
    (:CHARGE_PRE_CHECK_OK . 1)
    (:CHARGE_CHECK_OK . 2)
    (:CHARGEING . 3)
    (:CHARGE_OK . 4))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'power_chargeFeedback)))
    "Constants for message type 'power_chargeFeedback"
  '((:CHARGE_NONE . 0)
    (:CHARGE_PRE_CHECK_OK . 1)
    (:CHARGE_CHECK_OK . 2)
    (:CHARGEING . 3)
    (:CHARGE_OK . 4))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <power_chargeFeedback>) ostream)
  "Serializes a message object of type '<power_chargeFeedback>"
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'charge_fb_state)) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <power_chargeFeedback>) istream)
  "Deserializes a message object of type '<power_chargeFeedback>"
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'charge_fb_state)) (cl:read-byte istream))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<power_chargeFeedback>)))
  "Returns string type for a message object of type '<power_chargeFeedback>"
  "robot_scheduling_msgs/power_chargeFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'power_chargeFeedback)))
  "Returns string type for a message object of type 'power_chargeFeedback"
  "robot_scheduling_msgs/power_chargeFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<power_chargeFeedback>)))
  "Returns md5sum for a message object of type '<power_chargeFeedback>"
  "6765288e830c13508aae741a3a33a28d")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'power_chargeFeedback)))
  "Returns md5sum for a message object of type 'power_chargeFeedback"
  "6765288e830c13508aae741a3a33a28d")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<power_chargeFeedback>)))
  "Returns full string definition for message of type '<power_chargeFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Define a feedback message~%uint8 CHARGE_NONE=0~%uint8 CHARGE_PRE_CHECK_OK=1~%uint8 CHARGE_CHECK_OK=2~%uint8 CHARGEING=3~%uint8 CHARGE_OK=4~%uint8 charge_fb_state~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'power_chargeFeedback)))
  "Returns full string definition for message of type 'power_chargeFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Define a feedback message~%uint8 CHARGE_NONE=0~%uint8 CHARGE_PRE_CHECK_OK=1~%uint8 CHARGE_CHECK_OK=2~%uint8 CHARGEING=3~%uint8 CHARGE_OK=4~%uint8 charge_fb_state~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <power_chargeFeedback>))
  (cl:+ 0
     1
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <power_chargeFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'power_chargeFeedback
    (cl:cons ':charge_fb_state (charge_fb_state msg))
))
