;; Auto-generated. Do not edit!


(when (boundp 'actionlib_modules_msgs::actionlib_power_undockGoal)
  (if (not (find-package "ACTIONLIB_MODULES_MSGS"))
    (make-package "ACTIONLIB_MODULES_MSGS"))
  (shadow 'actionlib_power_undockGoal (find-package "ACTIONLIB_MODULES_MSGS")))
(unless (find-package "ACTIONLIB_MODULES_MSGS::ACTIONLIB_POWER_UNDOCKGOAL")
  (make-package "ACTIONLIB_MODULES_MSGS::ACTIONLIB_POWER_UNDOCKGOAL"))

(in-package "ROS")
;;//! \htmlinclude actionlib_power_undockGoal.msg.html


(defclass actionlib_modules_msgs::actionlib_power_undockGoal
  :super ros::object
  :slots (_call_aclib_name _rotate_in_place _post_time _use_timeout _timeout ))

(defmethod actionlib_modules_msgs::actionlib_power_undockGoal
  (:init
   (&key
    ((:call_aclib_name __call_aclib_name) "")
    ((:rotate_in_place __rotate_in_place) nil)
    ((:post_time __post_time) 0.0)
    ((:use_timeout __use_timeout) nil)
    ((:timeout __timeout) 0.0)
    )
   (send-super :init)
   (setq _call_aclib_name (string __call_aclib_name))
   (setq _rotate_in_place __rotate_in_place)
   (setq _post_time (float __post_time))
   (setq _use_timeout __use_timeout)
   (setq _timeout (float __timeout))
   self)
  (:call_aclib_name
   (&optional __call_aclib_name)
   (if __call_aclib_name (setq _call_aclib_name __call_aclib_name)) _call_aclib_name)
  (:rotate_in_place
   (&optional __rotate_in_place)
   (if __rotate_in_place (setq _rotate_in_place __rotate_in_place)) _rotate_in_place)
  (:post_time
   (&optional __post_time)
   (if __post_time (setq _post_time __post_time)) _post_time)
  (:use_timeout
   (&optional __use_timeout)
   (if __use_timeout (setq _use_timeout __use_timeout)) _use_timeout)
  (:timeout
   (&optional __timeout)
   (if __timeout (setq _timeout __timeout)) _timeout)
  (:serialization-length
   ()
   (+
    ;; string _call_aclib_name
    4 (length _call_aclib_name)
    ;; bool _rotate_in_place
    1
    ;; float32 _post_time
    4
    ;; bool _use_timeout
    1
    ;; float32 _timeout
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _call_aclib_name
       (write-long (length _call_aclib_name) s) (princ _call_aclib_name s)
     ;; bool _rotate_in_place
       (if _rotate_in_place (write-byte -1 s) (write-byte 0 s))
     ;; float32 _post_time
       (sys::poke _post_time (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; bool _use_timeout
       (if _use_timeout (write-byte -1 s) (write-byte 0 s))
     ;; float32 _timeout
       (sys::poke _timeout (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _call_aclib_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _call_aclib_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; bool _rotate_in_place
     (setq _rotate_in_place (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float32 _post_time
     (setq _post_time (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; bool _use_timeout
     (setq _use_timeout (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float32 _timeout
     (setq _timeout (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get actionlib_modules_msgs::actionlib_power_undockGoal :md5sum-) "54d2a2b26ab29aac0e8d1af381d1bd0d")
(setf (get actionlib_modules_msgs::actionlib_power_undockGoal :datatype-) "actionlib_modules_msgs/actionlib_power_undockGoal")
(setf (get actionlib_modules_msgs::actionlib_power_undockGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
# This action will always pull backwards off the dock Optionally, we can also turn around 180 degrees
string call_aclib_name
bool rotate_in_place
float32 post_time
bool use_timeout
float32 timeout

")



(provide :actionlib_modules_msgs/actionlib_power_undockGoal "54d2a2b26ab29aac0e8d1af381d1bd0d")


