;; Auto-generated. Do not edit!


(when (boundp 'actionlib_modules_msgs::actionlib_agv_movetoGoal)
  (if (not (find-package "ACTIONLIB_MODULES_MSGS"))
    (make-package "ACTIONLIB_MODULES_MSGS"))
  (shadow 'actionlib_agv_movetoGoal (find-package "ACTIONLIB_MODULES_MSGS")))
(unless (find-package "ACTIONLIB_MODULES_MSGS::ACTIONLIB_AGV_MOVETOGOAL")
  (make-package "ACTIONLIB_MODULES_MSGS::ACTIONLIB_AGV_MOVETOGOAL"))

(in-package "ROS")
;;//! \htmlinclude actionlib_agv_movetoGoal.msg.html
(if (not (find-package "NAV_2D_MSGS"))
  (ros::roseus-add-msgs "nav_2d_msgs"))


(defclass actionlib_modules_msgs::actionlib_agv_movetoGoal
  :super ros::object
  :slots (_goal _call_aclib_name _post_time _use_timeout _timeout ))

(defmethod actionlib_modules_msgs::actionlib_agv_movetoGoal
  (:init
   (&key
    ((:goal __goal) (instance nav_2d_msgs::Pose2DStamped :init))
    ((:call_aclib_name __call_aclib_name) "")
    ((:post_time __post_time) 0.0)
    ((:use_timeout __use_timeout) nil)
    ((:timeout __timeout) 0.0)
    )
   (send-super :init)
   (setq _goal __goal)
   (setq _call_aclib_name (string __call_aclib_name))
   (setq _post_time (float __post_time))
   (setq _use_timeout __use_timeout)
   (setq _timeout (float __timeout))
   self)
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:call_aclib_name
   (&optional __call_aclib_name)
   (if __call_aclib_name (setq _call_aclib_name __call_aclib_name)) _call_aclib_name)
  (:post_time
   (&optional __post_time)
   (if __post_time (setq _post_time __post_time)) _post_time)
  (:use_timeout
   (&optional __use_timeout)
   (if __use_timeout (setq _use_timeout __use_timeout)) _use_timeout)
  (:timeout
   (&optional __timeout)
   (if __timeout (setq _timeout __timeout)) _timeout)
  (:serialization-length
   ()
   (+
    ;; nav_2d_msgs/Pose2DStamped _goal
    (send _goal :serialization-length)
    ;; string _call_aclib_name
    4 (length _call_aclib_name)
    ;; float32 _post_time
    4
    ;; bool _use_timeout
    1
    ;; float32 _timeout
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; nav_2d_msgs/Pose2DStamped _goal
       (send _goal :serialize s)
     ;; string _call_aclib_name
       (write-long (length _call_aclib_name) s) (princ _call_aclib_name s)
     ;; float32 _post_time
       (sys::poke _post_time (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; bool _use_timeout
       (if _use_timeout (write-byte -1 s) (write-byte 0 s))
     ;; float32 _timeout
       (sys::poke _timeout (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; nav_2d_msgs/Pose2DStamped _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;; string _call_aclib_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _call_aclib_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _post_time
     (setq _post_time (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; bool _use_timeout
     (setq _use_timeout (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float32 _timeout
     (setq _timeout (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get actionlib_modules_msgs::actionlib_agv_movetoGoal :md5sum-) "e9d19824422fe0b06f378baad449004a")
(setf (get actionlib_modules_msgs::actionlib_agv_movetoGoal :datatype-) "actionlib_modules_msgs/actionlib_agv_movetoGoal")
(setf (get actionlib_modules_msgs::actionlib_agv_movetoGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
nav_2d_msgs/Pose2DStamped goal
string call_aclib_name
float32 post_time
bool use_timeout
float32 timeout

================================================================================
MSG: nav_2d_msgs/Pose2DStamped
Header header
geometry_msgs/Pose2D pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose2D
# Deprecated
# Please use the full 3D pose.

# In general our recommendation is to use a full 3D representation of everything and for 2D specific applications make the appropriate projections into the plane for their calculations but optimally will preserve the 3D information during processing.

# If we have parallel copies of 2D datatypes every UI and other pipeline will end up needing to have dual interfaces to plot everything. And you will end up with not being able to use 3D tools for 2D use cases even if they're completely valid, as you'd have to reimplement it with different inputs and outputs. It's not particularly hard to plot the 2D pose or compute the yaw error for the Pose message and there are already tools and libraries that can do this for you.


# This expresses a position and orientation on a 2D manifold.

float64 x
float64 y
float64 theta

")



(provide :actionlib_modules_msgs/actionlib_agv_movetoGoal "e9d19824422fe0b06f378baad449004a")


