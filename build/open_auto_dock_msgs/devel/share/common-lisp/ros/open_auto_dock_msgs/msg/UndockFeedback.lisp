; Auto-generated. Do not edit!


(cl:in-package open_auto_dock_msgs-msg)


;//! \htmlinclude UndockFeedback.msg.html

(cl:defclass <UndockFeedback> (roslisp-msg-protocol:ros-message)
  ((dock_pose
    :reader dock_pose
    :initarg :dock_pose
    :type geometry_msgs-msg:PoseStamped
    :initform (cl:make-instance 'geometry_msgs-msg:PoseStamped))
   (command
    :reader command
    :initarg :command
    :type geometry_msgs-msg:Twist
    :initform (cl:make-instance 'geometry_msgs-msg:Twist))
   (undocked
    :reader undocked
    :initarg :undocked
    :type cl:boolean
    :initform cl:nil))
)

(cl:defclass UndockFeedback (<UndockFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <UndockFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'UndockFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name open_auto_dock_msgs-msg:<UndockFeedback> is deprecated: use open_auto_dock_msgs-msg:UndockFeedback instead.")))

(cl:ensure-generic-function 'dock_pose-val :lambda-list '(m))
(cl:defmethod dock_pose-val ((m <UndockFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader open_auto_dock_msgs-msg:dock_pose-val is deprecated.  Use open_auto_dock_msgs-msg:dock_pose instead.")
  (dock_pose m))

(cl:ensure-generic-function 'command-val :lambda-list '(m))
(cl:defmethod command-val ((m <UndockFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader open_auto_dock_msgs-msg:command-val is deprecated.  Use open_auto_dock_msgs-msg:command instead.")
  (command m))

(cl:ensure-generic-function 'undocked-val :lambda-list '(m))
(cl:defmethod undocked-val ((m <UndockFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader open_auto_dock_msgs-msg:undocked-val is deprecated.  Use open_auto_dock_msgs-msg:undocked instead.")
  (undocked m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <UndockFeedback>) ostream)
  "Serializes a message object of type '<UndockFeedback>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'dock_pose) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'command) ostream)
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:if (cl:slot-value msg 'undocked) 1 0)) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <UndockFeedback>) istream)
  "Deserializes a message object of type '<UndockFeedback>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'dock_pose) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'command) istream)
    (cl:setf (cl:slot-value msg 'undocked) (cl:not (cl:zerop (cl:read-byte istream))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<UndockFeedback>)))
  "Returns string type for a message object of type '<UndockFeedback>"
  "open_auto_dock_msgs/UndockFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'UndockFeedback)))
  "Returns string type for a message object of type 'UndockFeedback"
  "open_auto_dock_msgs/UndockFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<UndockFeedback>)))
  "Returns md5sum for a message object of type '<UndockFeedback>"
  "60fe99876b8f0449f8591b17648ca7bc")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'UndockFeedback)))
  "Returns md5sum for a message object of type 'UndockFeedback"
  "60fe99876b8f0449f8591b17648ca7bc")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<UndockFeedback>)))
  "Returns full string definition for message of type '<UndockFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Feedback is the detected pose of the dock.~%geometry_msgs/PoseStamped dock_pose~%~%# Plus the control output~%geometry_msgs/Twist command~%~%# Have we undocked?~%bool undocked~%~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'UndockFeedback)))
  "Returns full string definition for message of type 'UndockFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Feedback is the detected pose of the dock.~%geometry_msgs/PoseStamped dock_pose~%~%# Plus the control output~%geometry_msgs/Twist command~%~%# Have we undocked?~%bool undocked~%~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <UndockFeedback>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'dock_pose))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'command))
     1
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <UndockFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'UndockFeedback
    (cl:cons ':dock_pose (dock_pose msg))
    (cl:cons ':command (command msg))
    (cl:cons ':undocked (undocked msg))
))
