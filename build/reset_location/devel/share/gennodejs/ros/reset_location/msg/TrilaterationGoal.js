// Auto-generated. Do not edit!

// (in-package reset_location.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class TrilaterationGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.tag1_x = null;
      this.tag1_y = null;
      this.tag2_x = null;
      this.tag2_y = null;
      this.tag3_x = null;
      this.tag3_y = null;
    }
    else {
      if (initObj.hasOwnProperty('tag1_x')) {
        this.tag1_x = initObj.tag1_x
      }
      else {
        this.tag1_x = 0.0;
      }
      if (initObj.hasOwnProperty('tag1_y')) {
        this.tag1_y = initObj.tag1_y
      }
      else {
        this.tag1_y = 0.0;
      }
      if (initObj.hasOwnProperty('tag2_x')) {
        this.tag2_x = initObj.tag2_x
      }
      else {
        this.tag2_x = 0.0;
      }
      if (initObj.hasOwnProperty('tag2_y')) {
        this.tag2_y = initObj.tag2_y
      }
      else {
        this.tag2_y = 0.0;
      }
      if (initObj.hasOwnProperty('tag3_x')) {
        this.tag3_x = initObj.tag3_x
      }
      else {
        this.tag3_x = 0.0;
      }
      if (initObj.hasOwnProperty('tag3_y')) {
        this.tag3_y = initObj.tag3_y
      }
      else {
        this.tag3_y = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type TrilaterationGoal
    // Serialize message field [tag1_x]
    bufferOffset = _serializer.float64(obj.tag1_x, buffer, bufferOffset);
    // Serialize message field [tag1_y]
    bufferOffset = _serializer.float64(obj.tag1_y, buffer, bufferOffset);
    // Serialize message field [tag2_x]
    bufferOffset = _serializer.float64(obj.tag2_x, buffer, bufferOffset);
    // Serialize message field [tag2_y]
    bufferOffset = _serializer.float64(obj.tag2_y, buffer, bufferOffset);
    // Serialize message field [tag3_x]
    bufferOffset = _serializer.float64(obj.tag3_x, buffer, bufferOffset);
    // Serialize message field [tag3_y]
    bufferOffset = _serializer.float64(obj.tag3_y, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type TrilaterationGoal
    let len;
    let data = new TrilaterationGoal(null);
    // Deserialize message field [tag1_x]
    data.tag1_x = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [tag1_y]
    data.tag1_y = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [tag2_x]
    data.tag2_x = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [tag2_y]
    data.tag2_y = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [tag3_x]
    data.tag3_x = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [tag3_y]
    data.tag3_y = _deserializer.float64(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 48;
  }

  static datatype() {
    // Returns string type for a message object
    return 'reset_location/TrilaterationGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'cdca09bf8b70b36bc95d7cee4cc216fd';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #goal
    float64 tag1_x
    float64 tag1_y
    float64 tag2_x
    float64 tag2_y
    float64 tag3_x
    float64 tag3_y
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new TrilaterationGoal(null);
    if (msg.tag1_x !== undefined) {
      resolved.tag1_x = msg.tag1_x;
    }
    else {
      resolved.tag1_x = 0.0
    }

    if (msg.tag1_y !== undefined) {
      resolved.tag1_y = msg.tag1_y;
    }
    else {
      resolved.tag1_y = 0.0
    }

    if (msg.tag2_x !== undefined) {
      resolved.tag2_x = msg.tag2_x;
    }
    else {
      resolved.tag2_x = 0.0
    }

    if (msg.tag2_y !== undefined) {
      resolved.tag2_y = msg.tag2_y;
    }
    else {
      resolved.tag2_y = 0.0
    }

    if (msg.tag3_x !== undefined) {
      resolved.tag3_x = msg.tag3_x;
    }
    else {
      resolved.tag3_x = 0.0
    }

    if (msg.tag3_y !== undefined) {
      resolved.tag3_y = msg.tag3_y;
    }
    else {
      resolved.tag3_y = 0.0
    }

    return resolved;
    }
};

module.exports = TrilaterationGoal;
