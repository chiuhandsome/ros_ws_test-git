;; Auto-generated. Do not edit!


(when (boundp 'reset_location::TrilaterationGoal)
  (if (not (find-package "RESET_LOCATION"))
    (make-package "RESET_LOCATION"))
  (shadow 'TrilaterationGoal (find-package "RESET_LOCATION")))
(unless (find-package "RESET_LOCATION::TRILATERATIONGOAL")
  (make-package "RESET_LOCATION::TRILATERATIONGOAL"))

(in-package "ROS")
;;//! \htmlinclude TrilaterationGoal.msg.html


(defclass reset_location::TrilaterationGoal
  :super ros::object
  :slots (_tag1_x _tag1_y _tag2_x _tag2_y _tag3_x _tag3_y ))

(defmethod reset_location::TrilaterationGoal
  (:init
   (&key
    ((:tag1_x __tag1_x) 0.0)
    ((:tag1_y __tag1_y) 0.0)
    ((:tag2_x __tag2_x) 0.0)
    ((:tag2_y __tag2_y) 0.0)
    ((:tag3_x __tag3_x) 0.0)
    ((:tag3_y __tag3_y) 0.0)
    )
   (send-super :init)
   (setq _tag1_x (float __tag1_x))
   (setq _tag1_y (float __tag1_y))
   (setq _tag2_x (float __tag2_x))
   (setq _tag2_y (float __tag2_y))
   (setq _tag3_x (float __tag3_x))
   (setq _tag3_y (float __tag3_y))
   self)
  (:tag1_x
   (&optional __tag1_x)
   (if __tag1_x (setq _tag1_x __tag1_x)) _tag1_x)
  (:tag1_y
   (&optional __tag1_y)
   (if __tag1_y (setq _tag1_y __tag1_y)) _tag1_y)
  (:tag2_x
   (&optional __tag2_x)
   (if __tag2_x (setq _tag2_x __tag2_x)) _tag2_x)
  (:tag2_y
   (&optional __tag2_y)
   (if __tag2_y (setq _tag2_y __tag2_y)) _tag2_y)
  (:tag3_x
   (&optional __tag3_x)
   (if __tag3_x (setq _tag3_x __tag3_x)) _tag3_x)
  (:tag3_y
   (&optional __tag3_y)
   (if __tag3_y (setq _tag3_y __tag3_y)) _tag3_y)
  (:serialization-length
   ()
   (+
    ;; float64 _tag1_x
    8
    ;; float64 _tag1_y
    8
    ;; float64 _tag2_x
    8
    ;; float64 _tag2_y
    8
    ;; float64 _tag3_x
    8
    ;; float64 _tag3_y
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _tag1_x
       (sys::poke _tag1_x (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _tag1_y
       (sys::poke _tag1_y (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _tag2_x
       (sys::poke _tag2_x (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _tag2_y
       (sys::poke _tag2_y (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _tag3_x
       (sys::poke _tag3_x (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _tag3_y
       (sys::poke _tag3_y (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _tag1_x
     (setq _tag1_x (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _tag1_y
     (setq _tag1_y (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _tag2_x
     (setq _tag2_x (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _tag2_y
     (setq _tag2_y (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _tag3_x
     (setq _tag3_x (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _tag3_y
     (setq _tag3_y (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get reset_location::TrilaterationGoal :md5sum-) "cdca09bf8b70b36bc95d7cee4cc216fd")
(setf (get reset_location::TrilaterationGoal :datatype-) "reset_location/TrilaterationGoal")
(setf (get reset_location::TrilaterationGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal
float64 tag1_x
float64 tag1_y
float64 tag2_x
float64 tag2_y
float64 tag3_x
float64 tag3_y

")



(provide :reset_location/TrilaterationGoal "cdca09bf8b70b36bc95d7cee4cc216fd")


