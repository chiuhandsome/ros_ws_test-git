// Auto-generated. Do not edit!

// (in-package actionlib_modules_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class actionlib_power_undockGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.call_aclib_name = null;
      this.rotate_in_place = null;
      this.post_time = null;
      this.use_timeout = null;
      this.timeout = null;
    }
    else {
      if (initObj.hasOwnProperty('call_aclib_name')) {
        this.call_aclib_name = initObj.call_aclib_name
      }
      else {
        this.call_aclib_name = '';
      }
      if (initObj.hasOwnProperty('rotate_in_place')) {
        this.rotate_in_place = initObj.rotate_in_place
      }
      else {
        this.rotate_in_place = false;
      }
      if (initObj.hasOwnProperty('post_time')) {
        this.post_time = initObj.post_time
      }
      else {
        this.post_time = 0.0;
      }
      if (initObj.hasOwnProperty('use_timeout')) {
        this.use_timeout = initObj.use_timeout
      }
      else {
        this.use_timeout = false;
      }
      if (initObj.hasOwnProperty('timeout')) {
        this.timeout = initObj.timeout
      }
      else {
        this.timeout = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type actionlib_power_undockGoal
    // Serialize message field [call_aclib_name]
    bufferOffset = _serializer.string(obj.call_aclib_name, buffer, bufferOffset);
    // Serialize message field [rotate_in_place]
    bufferOffset = _serializer.bool(obj.rotate_in_place, buffer, bufferOffset);
    // Serialize message field [post_time]
    bufferOffset = _serializer.float32(obj.post_time, buffer, bufferOffset);
    // Serialize message field [use_timeout]
    bufferOffset = _serializer.bool(obj.use_timeout, buffer, bufferOffset);
    // Serialize message field [timeout]
    bufferOffset = _serializer.float32(obj.timeout, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type actionlib_power_undockGoal
    let len;
    let data = new actionlib_power_undockGoal(null);
    // Deserialize message field [call_aclib_name]
    data.call_aclib_name = _deserializer.string(buffer, bufferOffset);
    // Deserialize message field [rotate_in_place]
    data.rotate_in_place = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [post_time]
    data.post_time = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [use_timeout]
    data.use_timeout = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [timeout]
    data.timeout = _deserializer.float32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += object.call_aclib_name.length;
    return length + 14;
  }

  static datatype() {
    // Returns string type for a message object
    return 'actionlib_modules_msgs/actionlib_power_undockGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '54d2a2b26ab29aac0e8d1af381d1bd0d';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Define the goal
    # This action will always pull backwards off the dock Optionally, we can also turn around 180 degrees
    string call_aclib_name
    bool rotate_in_place
    float32 post_time
    bool use_timeout
    float32 timeout
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new actionlib_power_undockGoal(null);
    if (msg.call_aclib_name !== undefined) {
      resolved.call_aclib_name = msg.call_aclib_name;
    }
    else {
      resolved.call_aclib_name = ''
    }

    if (msg.rotate_in_place !== undefined) {
      resolved.rotate_in_place = msg.rotate_in_place;
    }
    else {
      resolved.rotate_in_place = false
    }

    if (msg.post_time !== undefined) {
      resolved.post_time = msg.post_time;
    }
    else {
      resolved.post_time = 0.0
    }

    if (msg.use_timeout !== undefined) {
      resolved.use_timeout = msg.use_timeout;
    }
    else {
      resolved.use_timeout = false
    }

    if (msg.timeout !== undefined) {
      resolved.timeout = msg.timeout;
    }
    else {
      resolved.timeout = 0.0
    }

    return resolved;
    }
};

module.exports = actionlib_power_undockGoal;
