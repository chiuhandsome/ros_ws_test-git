;; Auto-generated. Do not edit!


(when (boundp 'robot_scheduling_msgs::dock_toGoal)
  (if (not (find-package "ROBOT_SCHEDULING_MSGS"))
    (make-package "ROBOT_SCHEDULING_MSGS"))
  (shadow 'dock_toGoal (find-package "ROBOT_SCHEDULING_MSGS")))
(unless (find-package "ROBOT_SCHEDULING_MSGS::DOCK_TOGOAL")
  (make-package "ROBOT_SCHEDULING_MSGS::DOCK_TOGOAL"))

(in-package "ROS")
;;//! \htmlinclude dock_toGoal.msg.html


(defclass robot_scheduling_msgs::dock_toGoal
  :super ros::object
  :slots (_dock_id _pre_dock_id _frame_id _command _dock_ac_name _use_move_base ))

(defmethod robot_scheduling_msgs::dock_toGoal
  (:init
   (&key
    ((:dock_id __dock_id) "")
    ((:pre_dock_id __pre_dock_id) "")
    ((:frame_id __frame_id) "")
    ((:command __command) 0)
    ((:dock_ac_name __dock_ac_name) "")
    ((:use_move_base __use_move_base) nil)
    )
   (send-super :init)
   (setq _dock_id (string __dock_id))
   (setq _pre_dock_id (string __pre_dock_id))
   (setq _frame_id (string __frame_id))
   (setq _command (round __command))
   (setq _dock_ac_name (string __dock_ac_name))
   (setq _use_move_base __use_move_base)
   self)
  (:dock_id
   (&optional __dock_id)
   (if __dock_id (setq _dock_id __dock_id)) _dock_id)
  (:pre_dock_id
   (&optional __pre_dock_id)
   (if __pre_dock_id (setq _pre_dock_id __pre_dock_id)) _pre_dock_id)
  (:frame_id
   (&optional __frame_id)
   (if __frame_id (setq _frame_id __frame_id)) _frame_id)
  (:command
   (&optional __command)
   (if __command (setq _command __command)) _command)
  (:dock_ac_name
   (&optional __dock_ac_name)
   (if __dock_ac_name (setq _dock_ac_name __dock_ac_name)) _dock_ac_name)
  (:use_move_base
   (&optional __use_move_base)
   (if __use_move_base (setq _use_move_base __use_move_base)) _use_move_base)
  (:serialization-length
   ()
   (+
    ;; string _dock_id
    4 (length _dock_id)
    ;; string _pre_dock_id
    4 (length _pre_dock_id)
    ;; string _frame_id
    4 (length _frame_id)
    ;; uint8 _command
    1
    ;; string _dock_ac_name
    4 (length _dock_ac_name)
    ;; bool _use_move_base
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _dock_id
       (write-long (length _dock_id) s) (princ _dock_id s)
     ;; string _pre_dock_id
       (write-long (length _pre_dock_id) s) (princ _pre_dock_id s)
     ;; string _frame_id
       (write-long (length _frame_id) s) (princ _frame_id s)
     ;; uint8 _command
       (write-byte _command s)
     ;; string _dock_ac_name
       (write-long (length _dock_ac_name) s) (princ _dock_ac_name s)
     ;; bool _use_move_base
       (if _use_move_base (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _dock_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _dock_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _pre_dock_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _pre_dock_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _frame_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _frame_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; uint8 _command
     (setq _command (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; string _dock_ac_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _dock_ac_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; bool _use_move_base
     (setq _use_move_base (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get robot_scheduling_msgs::dock_toGoal :md5sum-) "ff77f62eae339c0f037082a1f5744baf")
(setf (get robot_scheduling_msgs::dock_toGoal :datatype-) "robot_scheduling_msgs/dock_toGoal")
(setf (get robot_scheduling_msgs::dock_toGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
string dock_id
string pre_dock_id
string frame_id
uint8 command
string dock_ac_name
bool use_move_base

")



(provide :robot_scheduling_msgs/dock_toGoal "ff77f62eae339c0f037082a1f5744baf")


