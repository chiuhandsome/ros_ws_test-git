// Auto-generated. Do not edit!

// (in-package robot_scheduling_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class robot_commandGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.command = null;
      this.set_status = null;
    }
    else {
      if (initObj.hasOwnProperty('command')) {
        this.command = initObj.command
      }
      else {
        this.command = 0;
      }
      if (initObj.hasOwnProperty('set_status')) {
        this.set_status = initObj.set_status
      }
      else {
        this.set_status = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type robot_commandGoal
    // Serialize message field [command]
    bufferOffset = _serializer.uint8(obj.command, buffer, bufferOffset);
    // Serialize message field [set_status]
    bufferOffset = _serializer.uint8(obj.set_status, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type robot_commandGoal
    let len;
    let data = new robot_commandGoal(null);
    // Deserialize message field [command]
    data.command = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [set_status]
    data.set_status = _deserializer.uint8(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 2;
  }

  static datatype() {
    // Returns string type for a message object
    return 'robot_scheduling_msgs/robot_commandGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'b28059bb37d56347b09d592634a664fe';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Define the goal
    uint8 GET=1
    uint8 SET=2
    uint8 DISPATCH =3
    uint8 command
    uint8 UNKNOW=1
    uint8 INIT_POSE=2
    uint8 STANDBY=3
    uint8 MANU_RUN=4
    uint8 REMOTE=5
    uint8 ALARM=6
    uint8 EXIT=7
    uint8 set_status
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new robot_commandGoal(null);
    if (msg.command !== undefined) {
      resolved.command = msg.command;
    }
    else {
      resolved.command = 0
    }

    if (msg.set_status !== undefined) {
      resolved.set_status = msg.set_status;
    }
    else {
      resolved.set_status = 0
    }

    return resolved;
    }
};

// Constants for message
robot_commandGoal.Constants = {
  GET: 1,
  SET: 2,
  DISPATCH: 3,
  UNKNOW: 1,
  INIT_POSE: 2,
  STANDBY: 3,
  MANU_RUN: 4,
  REMOTE: 5,
  ALARM: 6,
  EXIT: 7,
}

module.exports = robot_commandGoal;
