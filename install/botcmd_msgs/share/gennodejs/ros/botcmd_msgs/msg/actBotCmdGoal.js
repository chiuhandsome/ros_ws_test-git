// Auto-generated. Do not edit!

// (in-package botcmd_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class actBotCmdGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.Device_ID = null;
      this.Command_ID = null;
      this.Command_Params = null;
    }
    else {
      if (initObj.hasOwnProperty('Device_ID')) {
        this.Device_ID = initObj.Device_ID
      }
      else {
        this.Device_ID = 0;
      }
      if (initObj.hasOwnProperty('Command_ID')) {
        this.Command_ID = initObj.Command_ID
      }
      else {
        this.Command_ID = 0;
      }
      if (initObj.hasOwnProperty('Command_Params')) {
        this.Command_Params = initObj.Command_Params
      }
      else {
        this.Command_Params = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type actBotCmdGoal
    // Serialize message field [Device_ID]
    bufferOffset = _serializer.int8(obj.Device_ID, buffer, bufferOffset);
    // Serialize message field [Command_ID]
    bufferOffset = _serializer.int8(obj.Command_ID, buffer, bufferOffset);
    // Serialize message field [Command_Params]
    bufferOffset = _serializer.int16(obj.Command_Params, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type actBotCmdGoal
    let len;
    let data = new actBotCmdGoal(null);
    // Deserialize message field [Device_ID]
    data.Device_ID = _deserializer.int8(buffer, bufferOffset);
    // Deserialize message field [Command_ID]
    data.Command_ID = _deserializer.int8(buffer, bufferOffset);
    // Deserialize message field [Command_Params]
    data.Command_Params = _deserializer.int16(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 4;
  }

  static datatype() {
    // Returns string type for a message object
    return 'botcmd_msgs/actBotCmdGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '13bb76852e6b4bbe28b7c35b8c876bc4';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Goal
    int8  Device_ID
    int8  Command_ID
    int16 Command_Params
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new actBotCmdGoal(null);
    if (msg.Device_ID !== undefined) {
      resolved.Device_ID = msg.Device_ID;
    }
    else {
      resolved.Device_ID = 0
    }

    if (msg.Command_ID !== undefined) {
      resolved.Command_ID = msg.Command_ID;
    }
    else {
      resolved.Command_ID = 0
    }

    if (msg.Command_Params !== undefined) {
      resolved.Command_Params = msg.Command_Params;
    }
    else {
      resolved.Command_Params = 0
    }

    return resolved;
    }
};

module.exports = actBotCmdGoal;
